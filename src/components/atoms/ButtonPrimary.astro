---
import type { HTMLAttributes } from "astro/types";
import type { TButton } from "constants/themes/ThemeButton";
import { ThemeButton } from "constants/themes/ThemeButton";
import { twMerge } from "tailwind-merge";

interface Button {
  variant?: keyof TButton["variant"];
  size?: keyof TButton["size"];
}

interface ComponentA extends Button, HTMLAttributes<"a"> {
  component: "a";
}

interface ComponentButton extends Button, HTMLAttributes<"button"> {
  component: "button";
}

type Props = ComponentA | ComponentButton;

const {
  component,
  type,
  variant = "primary",
  size = "md",
  ...props
} = Astro.props;

const classList = twMerge(
  ThemeButton.base,
  ThemeButton.variant[variant],
  ThemeButton.size[size]
);
---

{
  component === "a" ? (
    <a class={classList} {...props}>
      <slot />
    </a>
  ) : (
    <button class={classList} type={type} {...props}>
      asdf
    </button>
  )
}
